digraph "ICFG" {
	label="ICFG";

	Node0x100c14090 [shape=record,color=green,label="{NodeID: 29\nFunExitBlockNode ID: 29Exit(\{  \})\n \{fun: main\}}"];
	Node0x100c13e80 [shape=record,color=black,label="{NodeID: 28\nIntraBlockNode ID: 28   ret i32 0 \{fun: main\}}"];
	Node0x100c13e80 -> Node0x100c14090[style=solid];
	Node0x100c13c60 [shape=record,color=blue,label="{NodeID: 27\nRetBlockNode ID: 27   call void @swap(i8** %a, i8** %b) \{fun: main\}}"];
	Node0x100c13c60 -> Node0x100c13e80[style=solid];
	Node0x100c13b10 [shape=record,color=red,label="{NodeID: 26\nCallBlockNode ID: 26   call void @swap(i8** %a, i8** %b) \{fun: main\}|{|<s1>0x100c0cac8}}"];
	Node0x100c13b10 -> Node0x100c13c60[style=solid];
	Node0x100c13b10:s1 -> Node0x100c08010[style=solid,color=red];
	Node0x100c13930 [shape=record,color=black,label="{NodeID: 25\nIntraBlockNode ID: 25   store i8* %b1, i8** %b, align 8 \{fun: main\}StorePE: [4294967266\<--4294967268]    store i8* %b1, i8** %b, align 8\{  \}}"];
	Node0x100c13930 -> Node0x100c13b10[style=solid];
	Node0x100c12610 [shape=record,color=black,label="{NodeID: 24\nIntraBlockNode ID: 24   store i8* %a1, i8** %a, align 8 \{fun: main\}StorePE: [4294967267\<--4294967269]    store i8* %a1, i8** %a, align 8\{  \}}"];
	Node0x100c12610 -> Node0x100c13930[style=solid];
	Node0x100c135c0 [shape=record,color=black,label="{NodeID: 23\nIntraBlockNode ID: 23   %b = alloca i8*, align 8 \{fun: main\}AddrPE: [4294967266\<--12]    %b = alloca i8*, align 8\{  \}}"];
	Node0x100c135c0 -> Node0x100c12610[style=solid];
	Node0x100c13470 [shape=record,color=black,label="{NodeID: 22\nIntraBlockNode ID: 22   %a = alloca i8*, align 8 \{fun: main\}AddrPE: [4294967267\<--11]    %a = alloca i8*, align 8\{  \}}"];
	Node0x100c13470 -> Node0x100c135c0[style=solid];
	Node0x100c13350 [shape=record,color=black,label="{NodeID: 21\nIntraBlockNode ID: 21   %b1 = alloca i8, align 1 \{fun: main\}AddrPE: [4294967268\<--10]    %b1 = alloca i8, align 1\{  \}}"];
	Node0x100c13350 -> Node0x100c13470[style=solid];
	Node0x100c13260 [shape=record,color=black,label="{NodeID: 20\nIntraBlockNode ID: 20   %a1 = alloca i8, align 1 \{fun: main\}AddrPE: [4294967269\<--9]    %a1 = alloca i8, align 1\{  \}}"];
	Node0x100c13260 -> Node0x100c13350[style=solid];
	Node0x100c12ae0 [shape=record,color=yellow,label="{NodeID: 19\nFunEntryBlockNode ID: 19Entry(\{  \})\n \{fun: main\}}"];
	Node0x100c12ae0 -> Node0x100c079f0[style=solid];
	Node0x100c12ae0 -> Node0x100c13260[style=solid];
	Node0x100c13100 [shape=record,color=green,label="{NodeID: 18\nFunExitBlockNode ID: 18Exit(\{  \})\n \{fun: swap\}|{<s0>0x100c0cac8}}"];
	Node0x100c13100:s0 -> Node0x100c13c60[style=solid,color=blue];
	Node0x100c12f80 [shape=record,color=black,label="{NodeID: 17\nIntraBlockNode ID: 17   ret void \{fun: swap\}}"];
	Node0x100c12f80 -> Node0x100c13100[style=solid];
	Node0x100c12e00 [shape=record,color=black,label="{NodeID: 16\nIntraBlockNode ID: 16   store i8* %5, i8** %6, align 8 \{fun: swap\}StorePE: [4294967274\<--4294967275]    store i8* %5, i8** %6, align 8\{  \}}"];
	Node0x100c12e00 -> Node0x100c12f80[style=solid];
	Node0x100c12ce0 [shape=record,color=black,label="{NodeID: 15\nIntraBlockNode ID: 15   %6 = load i8**, i8*** %q.addr, align 8 \{fun: swap\}LoadPE: [4294967274\<--4294967286]    %6 = load i8**, i8*** %q.addr, align 8\{  \}}"];
	Node0x100c12ce0 -> Node0x100c12e00[style=solid];
	Node0x100c12bc0 [shape=record,color=black,label="{NodeID: 14\nIntraBlockNode ID: 14   %5 = load i8*, i8** %t, align 8 \{fun: swap\}LoadPE: [4294967275\<--4294967285]    %5 = load i8*, i8** %t, align 8\{  \}}"];
	Node0x100c12bc0 -> Node0x100c12ce0[style=solid];
	Node0x100c128c0 [shape=record,color=black,label="{NodeID: 13\nIntraBlockNode ID: 13   store i8* %3, i8** %4, align 8 \{fun: swap\}StorePE: [4294967277\<--4294967278]    store i8* %3, i8** %4, align 8\{  \}}"];
	Node0x100c128c0 -> Node0x100c12bc0[style=solid];
	Node0x100c127a0 [shape=record,color=black,label="{NodeID: 12\nIntraBlockNode ID: 12   %4 = load i8**, i8*** %p.addr, align 8 \{fun: swap\}LoadPE: [4294967277\<--4294967287]    %4 = load i8**, i8*** %p.addr, align 8\{  \}}"];
	Node0x100c127a0 -> Node0x100c128c0[style=solid];
	Node0x100c12560 [shape=record,color=black,label="{NodeID: 11\nIntraBlockNode ID: 11   %3 = load i8*, i8** %2, align 8 \{fun: swap\}LoadPE: [4294967278\<--4294967279]    %3 = load i8*, i8** %2, align 8\{  \}}"];
	Node0x100c12560 -> Node0x100c127a0[style=solid];
	Node0x100c12440 [shape=record,color=black,label="{NodeID: 10\nIntraBlockNode ID: 10   %2 = load i8**, i8*** %q.addr, align 8 \{fun: swap\}LoadPE: [4294967279\<--4294967286]    %2 = load i8**, i8*** %q.addr, align 8\{  \}}"];
	Node0x100c12440 -> Node0x100c12560[style=solid];
	Node0x100c12320 [shape=record,color=black,label="{NodeID: 9\nIntraBlockNode ID: 9   store i8* %1, i8** %t, align 8 \{fun: swap\}StorePE: [4294967285\<--4294967281]    store i8* %1, i8** %t, align 8\{  \}}"];
	Node0x100c12320 -> Node0x100c12440[style=solid];
	Node0x100c12230 [shape=record,color=black,label="{NodeID: 8\nIntraBlockNode ID: 8   %1 = load i8*, i8** %0, align 8 \{fun: swap\}LoadPE: [4294967281\<--4294967282]    %1 = load i8*, i8** %0, align 8\{  \}}"];
	Node0x100c12230 -> Node0x100c12320[style=solid];
	Node0x100c12080 [shape=record,color=black,label="{NodeID: 7\nIntraBlockNode ID: 7   %0 = load i8**, i8*** %p.addr, align 8 \{fun: swap\}LoadPE: [4294967282\<--4294967287]    %0 = load i8**, i8*** %p.addr, align 8\{  \}}"];
	Node0x100c12080 -> Node0x100c12230[style=solid];
	Node0x100c11f60 [shape=record,color=black,label="{NodeID: 6\nIntraBlockNode ID: 6   store i8** %q, i8*** %q.addr, align 8 \{fun: swap\}StorePE: [4294967286\<--4294967288]    store i8** %q, i8*** %q.addr, align 8\{  \}}"];
	Node0x100c11f60 -> Node0x100c12080[style=solid];
	Node0x100c11e10 [shape=record,color=black,label="{NodeID: 5\nIntraBlockNode ID: 5   store i8** %p, i8*** %p.addr, align 8 \{fun: swap\}StorePE: [4294967287\<--4294967289]    store i8** %p, i8*** %p.addr, align 8\{  \}}"];
	Node0x100c11e10 -> Node0x100c11f60[style=solid];
	Node0x100c11c90 [shape=record,color=black,label="{NodeID: 4\nIntraBlockNode ID: 4   %t = alloca i8*, align 8 \{fun: swap\}AddrPE: [4294967285\<--7]    %t = alloca i8*, align 8\{  \}}"];
	Node0x100c11c90 -> Node0x100c11e10[style=solid];
	Node0x100c11b70 [shape=record,color=black,label="{NodeID: 3\nIntraBlockNode ID: 3   %q.addr = alloca i8**, align 8 \{fun: swap\}AddrPE: [4294967286\<--6]    %q.addr = alloca i8**, align 8\{  \}}"];
	Node0x100c11b70 -> Node0x100c11c90[style=solid];
	Node0x100c11a50 [shape=record,color=black,label="{NodeID: 2\nIntraBlockNode ID: 2   %p.addr = alloca i8**, align 8 \{fun: swap\}AddrPE: [4294967287\<--5]    %p.addr = alloca i8**, align 8\{  \}}"];
	Node0x100c11a50 -> Node0x100c11b70[style=solid];
	Node0x100c08010 [shape=record,color=yellow,label="{NodeID: 1\nFunEntryBlockNode ID: 1Entry(\{  \})\n \{fun: swap\}}"];
	Node0x100c08010 -> Node0x100c11a50[style=solid];
	Node0x100c079f0 [shape=record,color=purple,label="{NodeID: 0\nCopyPE: [2\<--3]  i8* null\{ Can only get source location for instruction, argument, global var or function. \}AddrPE: [4294967291\<--4]  ; Function Attrs: noinline nounwind optnone ssp uwtable\ndefine void @swap(i8** %p, i8** %q) #0 \{\nentry:\n  %p.addr = alloca i8**, align 8\n  %q.addr = alloca i8**, align 8\n  %t = alloca i8*, align 8\n  store i8** %p, i8*** %p.addr, align 8\n  store i8** %q, i8*** %q.addr, align 8\n  %0 = load i8**, i8*** %p.addr, align 8\n  %1 = load i8*, i8** %0, align 8\n  store i8* %1, i8** %t, align 8\n  %2 = load i8**, i8*** %q.addr, align 8\n  %3 = load i8*, i8** %2, align 8\n  %4 = load i8**, i8*** %p.addr, align 8\n  store i8* %3, i8** %4, align 8\n  %5 = load i8*, i8** %t, align 8\n  %6 = load i8**, i8*** %q.addr, align 8\n  store i8* %5, i8** %6, align 8\n  ret void\n\}\n\{  \}AddrPE: [4294967271\<--8]  ; Function Attrs: noinline nounwind optnone ssp uwtable\ndefine i32 @main() #0 \{\nentry:\n  %a1 = alloca i8, align 1\n  %b1 = alloca i8, align 1\n  %a = alloca i8*, align 8\n  %b = alloca i8*, align 8\n  store i8* %a1, i8** %a, align 8\n  store i8* %b1, i8** %b, align 8\n  call void @swap(i8** %a, i8** %b)\n  ret i32 0\n\}\n\{  \}}"];
}
